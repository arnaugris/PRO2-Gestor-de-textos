/** @file Autor.hh
	@brief Especificaci√≥ de la classe Autor.

Classe utilitzada per la caracteritzaci√≥ dels autors dels textos.

*/

#ifndef AUTORS_HH
#define AUTORS_HH

#include <set>
#include "Text.hh"

/*
 * Classe Autor
*/

/** @class Autor
	@brief Representa els autors dels textos del sistema.

*/
class Autor
{
	public:
		//Constructores

		/** @brief Constructor de la classe.
			@param nom: Nom de l'autor.
			@param referencia: Referencia de l'autor.
			\pre cert
			\post Retorna un nou objecte de tipus Autor amb el nom i la referencia inicialitzats.
		*/
		Autor(string nom, string referencia);

		//Consultores

		/** @brief Retorna el nom del par√†metre implicit.
			\pre El par√†metre impl√≠cit ha de tenir un nom.
			\post Retorna l'string equivalent al nom de l'autor.
		*/
		string consultar_nom();
		/** @brief Retorna la referencia del par√†metre implicit.
			\pre El par√†metre impl√≠cit ha de tenir una referencia.
			\post Retorna l'string equivalent a la referencia del par√†metre impl√≠cit.
		*/
		string consultar_referencia();
		/** @brief Retorna un objecte "set" amb tots els Textos del par√†metre impl√≠cit.
			\pre cert
			\post Retorna un objecte "set" amb els textos del par√†metre impl√≠cit. Si el par√†metre impl√≠cit no t√© textos, el set estar√† buit.
		*/
		set<Text> tots_textos();
		/** @brief Comprova si el par√†metre impl√≠cit ja t√© un text amb un titol rebut per par√†metre.
			@param titol: Titol del text a buscar.
			\pre cert
			\post Retorna "True" si el par√†metre impl√≠cit ja t√© un text amb el titol rebut. Retorna "False" en cas contrari.
		*/
		bool existeix_titol(string titol);
		/** @brief Comprova si el par√†metre impl√≠cit t√© un text en el qual aparegui una paraula en concret (tant en el titol com en el contingut).
			@param paraula: Paraula a cercar.
			\pre cert
			\post Retorna el Text en el que apareix la paraula del par√†metre si n'existeix un al par√†metre impl√≠cit. Retorna un Text de titol "NULL" si no existeix cap o mÈs d'un.
		*/
		Text existeix_text_amb_paraula(string paraula);

		//Modificadores

		/** @brief Afegeix un text al par√†metre impl√≠cit, retornant el resultat de l'operaci√≥.
			@param text: Objecte del tipus Text a afegir.
			\pre L'objecte del par√†metre ha d'estar correctament definit.
			\post El par√†metre impl√≠cit tindr√† afegit aquest nou Text sempre i quan no exist√≠s cap Text amb el mateix titol. El boolea ens diu si s'ha pogut afegir (True) o no (False).
		*/
		bool afegir_text(Text text);
		/** @brief Elimina el text del par√†metre impl√≠cit amb un titol en concret, retornant el resultat de l'operaci√≥.
			@param titol: Titol del text a eliminar.
			\pre cert
			\post El parametre implicit ja no t√© el Text amb titol = par√†metre. Retorna "True" si s'ha eliminat el Text. Retorna "False" en cas que no s'hagi trobat cap text.
		*/
		bool eliminar_text(string titol);

	private:
		string nom, referencia;
		set<Text> textos;

}

#endif
